---
openapi: 3.0.3
info:
  title: duerre-manager API
  version: 1.2.1
servers:
- url: http://localhost:8079
  description: Auto generated value
- url: http://0.0.0.0:8079
  description: Auto generated value
paths:
  /api/v1/customer-controller/list-customers:
    get:
      tags:
      - Customer Resource
      operationId: listCustomers
      responses:
        "200":
          description: List customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "500":
          description: Unable to list customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/create-die:
    post:
      tags:
      - Die Resource
      operationId: createDie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DieDao'
      responses:
        "200":
          description: Die created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdWrapper'
        "500":
          description: Unable to create die
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/delete-die/{id}:
    delete:
      tags:
      - Die Resource
      operationId: deleteDie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Delete die
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageWrapper'
        "500":
          description: Unable to delete die
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/delete-search/{id}:
    delete:
      tags:
      - Die Resource
      operationId: deleteSearch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Delete search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageWrapper'
        "500":
          description: Unable to delete search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/die/{id}:
    get:
      tags:
      - Die Resource
      operationId: getDie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Get die
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Die'
        "404":
          description: Die not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
        "500":
          description: Unable to get die
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/edit-die:
    post:
      tags:
      - Die Resource
      operationId: editDie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DieDao'
      responses:
        "200":
          description: Die modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdWrapper'
        "500":
          description: Unable to modify die
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/list-dies:
    get:
      tags:
      - Die Resource
      operationId: listDies
      responses:
        "200":
          description: List dies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Die'
        "500":
          description: Unable to list dies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/search-dies:
    put:
      tags:
      - Die Resource
      operationId: searchDies
      parameters:
      - name: threshold
        in: query
        schema:
          format: float
          default: "1000.0"
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DieSearchDao'
      responses:
        "200":
          description: Search dies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompleteDieSearchResult'
        "500":
          description: Unable to search dies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/die-controller/searches:
    get:
      tags:
      - Die Resource
      operationId: getSearches
      parameters:
      - name: pageSize
        in: query
        schema:
          format: int32
          default: "15"
          type: integer
      responses:
        "200":
          description: Get searches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DieSearch'
        "500":
          description: Unable to get searches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/order-controller/change-order-status/{id}/{status}:
    put:
      tags:
      - Order Resource
      operationId: changeOrderStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: status
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OrderStatus'
      responses:
        "200":
          description: Order modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "500":
          description: Unable to modify order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/order-controller/create-order:
    post:
      tags:
      - Order Resource
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDao'
      responses:
        "200":
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdWrapper'
        "500":
          description: Unable to create order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/order-controller/delete-order/{id}:
    delete:
      tags:
      - Order Resource
      operationId: deleteOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Delete order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageWrapper'
        "500":
          description: Unable to delete order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/order-controller/edit-order:
    put:
      tags:
      - Order Resource
      operationId: editOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDao'
      responses:
        "200":
          description: Order modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdWrapper'
        "500":
          description: Unable to modify order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/order-controller/list-orders:
    get:
      tags:
      - Order Resource
      operationId: listOrders
      responses:
        "200":
          description: List orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        "500":
          description: Unable to list orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/order-controller/order/{id}:
    get:
      tags:
      - Order Resource
      operationId: getOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Get order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
        "500":
          description: Unable to get order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/updater-controller/ack-error:
    put:
      tags:
      - Updater Resource
      operationId: ackUpdateError
      responses:
        "200":
          description: OK
  /api/v1/updater-controller/check-update:
    get:
      tags:
      - Updater Resource
      operationId: checkForUpdates
      responses:
        "200":
          description: Check if update is available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAvailable'
        "500":
          description: Unable to check for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/updater-controller/sse:
    get:
      tags:
      - Updater Resource
      operationId: updateProgress
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateStatus'
  /api/v1/updater-controller/status:
    get:
      tags:
      - Updater Resource
      operationId: updateStatus
      responses:
        "200":
          description: Check if update is available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStatus'
        "500":
          description: Unable to check for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /api/v1/updater-controller/update:
    put:
      tags:
      - Updater Resource
      operationId: update
      responses:
        "200":
          description: OK
components:
  schemas:
    CompleteDieSearchResult:
      type: object
      properties:
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        dieData:
          $ref: '#/components/schemas/DieData'
        customer:
          $ref: '#/components/schemas/Customer'
        dieType:
          $ref: '#/components/schemas/DieType'
        material:
          $ref: '#/components/schemas/MaterialType'
        totalHeight:
          format: double
          type: number
        totalWidth:
          format: double
          type: number
        shoeWidth:
          format: double
          type: number
        crestWidth:
          format: double
          type: number
        creationDate:
          $ref: '#/components/schemas/LocalDateTime'
        textScore:
          format: double
          type: number
        sizeScore:
          format: double
          type: number
        matchScore:
          format: double
          type: number
    Customer:
      type: object
      properties:
        name:
          type: string
    Date:
      format: date
      type: string
      example: 2022-03-10
    Die:
      type: object
      properties:
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        dieData:
          $ref: '#/components/schemas/DieData'
        customer:
          $ref: '#/components/schemas/Customer'
        dieType:
          $ref: '#/components/schemas/DieType'
        material:
          $ref: '#/components/schemas/MaterialType'
        totalHeight:
          format: double
          type: number
        totalWidth:
          format: double
          type: number
        shoeWidth:
          format: double
          type: number
        crestWidth:
          format: double
          type: number
        creationDate:
          $ref: '#/components/schemas/LocalDateTime'
    DieDao:
      type: object
      properties:
        name:
          type: string
        dieData:
          $ref: '#/components/schemas/DieShapeExport'
        customer:
          type: string
        aliases:
          type: array
          items:
            type: string
        dieType:
          $ref: '#/components/schemas/DieType'
        material:
          $ref: '#/components/schemas/MaterialType'
        totalHeight:
          format: double
          type: number
        totalWidth:
          format: double
          type: number
        shoeWidth:
          format: double
          type: number
        crestWidth:
          format: double
          type: number
    DieData:
      type: object
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DieDataLine'
    DieDataLine:
      type: object
      properties:
        type:
          type: string
        points:
          type: array
          items:
            format: double
            type: number
    DieLineDao:
      type: object
      properties:
        type:
          type: string
        points:
          type: array
          items:
            format: double
            type: number
    DieSearch:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        text:
          type: string
        dieData:
          $ref: '#/components/schemas/DieData'
        customers:
          type: array
          items:
            type: string
        dieTypes:
          type: array
          items:
            $ref: '#/components/schemas/DieType'
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialType'
        totalHeight:
          format: double
          type: number
        totalWidth:
          format: double
          type: number
        shoeWidth:
          format: double
          type: number
        crestWidth:
          format: double
          type: number
        title:
          type: string
        subtitle:
          type: string
        searchDate:
          $ref: '#/components/schemas/LocalDateTime'
    DieSearchDao:
      type: object
      properties:
        text:
          type: string
        dieData:
          $ref: '#/components/schemas/DieShapeExport'
        customers:
          type: array
          items:
            type: string
        dieTypes:
          type: array
          items:
            $ref: '#/components/schemas/DieType'
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialType'
        totalHeight:
          format: double
          type: number
        totalWidth:
          format: double
          type: number
        shoeWidth:
          format: double
          type: number
        crestWidth:
          format: double
          type: number
    DieShapeExport:
      type: object
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DieLineDao'
    DieType:
      enum:
      - MONOCOLORE
      - BICOLORE
      - TRICOLORE
      type: string
    ErrorWrapper:
      type: object
      properties:
        message:
          type: string
    IdWrapper:
      type: object
      properties:
        id: {}
    Instant:
      format: date-time
      type: string
      example: 2022-03-10T16:15:50Z
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    MaterialType:
      enum:
      - TPU
      - PVC
      - TR
      - POLIETILENE
      type: string
    MessageWrapper:
      type: object
      properties:
        message: {}
    ObjectId:
      type: object
      properties:
        timestamp:
          format: int32
          type: integer
        counter:
          format: int32
          type: integer
        randomValue1:
          format: int32
          type: integer
        randomValue2:
          type: integer
        date:
          $ref: '#/components/schemas/Date'
    Order:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        dieName:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
        quantity:
          format: int64
          type: integer
        description:
          type: string
        creationDate:
          $ref: '#/components/schemas/LocalDateTime'
        expirationDate:
          $ref: '#/components/schemas/LocalDateTime'
        completitionDate:
          $ref: '#/components/schemas/LocalDateTime'
        startDate:
          $ref: '#/components/schemas/LocalDateTime'
        status:
          $ref: '#/components/schemas/OrderStatus'
        duration:
          format: int64
          type: integer
        orderId:
          type: string
    OrderDao:
      type: object
      properties:
        dieName:
          type: string
        customer:
          type: string
        quantity:
          format: int64
          type: integer
        description:
          type: string
        expirationDate:
          $ref: '#/components/schemas/Instant'
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderId:
          type: string
    OrderStatus:
      enum:
      - TODO
      - IN_PROGRESS
      - DONE
      - CANCELLED
      type: string
    UpdateAvailable:
      type: object
      properties:
        available:
          type: boolean
        version:
          type: string
    UpdatePhase:
      enum:
      - UNSET
      - STARTING
      - DOWNLOADING
      - INSTALLING
      type: string
    UpdateStatus:
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/UpdatePhase'
        progress:
          format: double
          type: number
        updating:
          type: boolean
        error:
          type: string
